// task7.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include < string.h >
#include < cstring >
void zad6(int a[],int b[],int n,int m,int result[]) {


	int i = 0, j = 0;

	int index = 0;
	while (i < n && j < m)
	{

		if (a[i] < b[j])
		{
			result[index] = a[i];
			i++;

		}
		else
		{
			result[index] = b[j];
			j++;

		}

		index++;
	}

	while (i < n)
	{
		result[index] = a[i];
		index++;
		i++;
	}

	while (j < m)
	{
		result[index] = b[j];
		index++;
		j++;
	}
}
void zadanie6() {
	// Считываем размеры массивов,
	int n, m;
	printf("\nКол-во эллементов в 1 массиве? ");
	scanf_s("%d",&n);
	printf("\nКол-во эллементов вo 2 массиве? ");
	scanf_s("%d",&m);
	//выделяем память
	int* a = new int[n];
	int* b = new int[m];

	// Считываем массивы;
	printf("\nВведите эллементы 1 массива  ");
	for (int i = 0; i < n; i++)
	{
		scanf_s("%d",&a[i]);
	}
	printf("\nВведите эллементы 2 массива  ");
	for (int i = 0; i < m; i++)
	{
		scanf_s("%d", &b[i]);
	}

	int* result = new int[n + m];
	zad6(a,b,n,m,result);
	
	printf("Ответ:");
	// Выводим отсортированный массив
	for (int k = 0; k < n + m; k++)
	{
		printf("  %d",result[k]);
	}
}

int main()
{
	int q=-1;
	setlocale(LC_ALL, "Russian");
	
	//Task6

	
	printf("\n\n6) (2) Написать функцию, объединяющую два упорядоченных массива размером m и n в упорядоченный массив размером m+n (итоговый массив не сортировать)");
	printf("\n\n0)Выйти");
	while (q!=0) {
		printf("\n\nВведите номер нужного задания : ");
		scanf_s("%d", &q);
		switch(q){
		
		case 6: {
			zadanie6();//Задание 6
			break;
		}

		}
	}
	return 0; 
}



// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
